name: "Build and push image"
description: "Builds and pushes an image to a registry"

inputs:
  service:
    description: "Service to build"
    required: true
  registry_host:
    description: "Image registry host e.g. myacr.azureacr.io"
    required: true
  registry_endpoint:
    description: "Image registry repo e.g. myacr.azureacr.io/eshop"
    required: true
  image_name:
    description: "Name of image"
    required: true
  registry_username:
    description: "Registry username"
    required: true
  registry_password:
    description: "Registry password"
    required: true
  google_client_id:
    description: "Google client id"
    required: false
  google_client_secret:
    description: "Google client secret"
    required: false
runs:
  using: "composite"
  steps:
  - name: Enable experimental features for the Docker daemon and CLI
    shell: bash
    run: |
        echo $'{\n  "experimental": true\n}' | sudo tee /etc/docker/daemon.json
        mkdir -p ~/.docker
        echo $'{\n  "experimental": "enabled"\n}' | sudo tee ~/.docker/config.json
        sudo service docker restart

  - name: Login to Container Registry
    uses: docker/login-action@v2
    with:
      registry: ${{ inputs.registry_host }}
      username: ${{ inputs.registry_username }}
      password: ${{ inputs.registry_password }}

  - name: Set branch name as env variable
    run: |
      currentbranch=$(echo ${GITHUB_REF##*/})
      echo "running on $currentbranch"
      echo "BRANCH=$currentbranch" >> $GITHUB_ENV
    shell: bash

  - name: Compose build ${{ inputs.service }}
    shell: bash
    run: sudo -E docker-compose build ${{ inputs.service }}
    working-directory: ./SimpleServer/src
    env:
      TAG: ${{ env.BRANCH }}
      REGISTRY: ${{ inputs.registry_endpoint }}
      GOOGLE_CLIENT_ID: ${{ inputs.google_client_id }}
      GOOGLE_CLIENT_SECRET: ${{ inputs.google_client_secret }}

  - name: Compose push ${{ inputs.service }}
    shell: bash
    run: sudo -E docker-compose push ${{ inputs.service }}
    working-directory: ./SimpleServer/src
    env:
      TAG: ${{ env.BRANCH }}
      REGISTRY: ${{ inputs.registry_endpoint }}
      GOOGLE_CLIENT_ID: ${{ inputs.google_client_id }}
      GOOGLE_CLIENT_SECRET: ${{ inputs.google_client_secret }}

  - name: Create multiarch manifest
    shell: bash
    run: |
      docker --config ~/.docker manifest create ${{ inputs.registry_endpoint  }}/${{ inputs.image_name }}:${{ env.BRANCH  }} ${{ inputs.registry_endpoint  }}/${{ inputs.image_name  }}:linux-${{ env.BRANCH  }}
      docker --config ~/.docker manifest push ${{ inputs.registry_endpoint  }}/${{ inputs.image_name }}:${{ env.BRANCH  }}
