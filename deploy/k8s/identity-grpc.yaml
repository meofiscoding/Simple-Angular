apiVersion: apps/v1
kind: Deployment
metadata:
  name: identity-grpc-deployment
  namespace: ingress-nginx
  labels:
    app: identity-grpc
spec:
  replicas: 2
  selector:
    matchLabels:
      app: identity-grpc
  template:
    metadata:
      labels:
        app: identity-grpc
    spec:
      containers:
        - name: identity-grpc
          image: 281901/identity:dev
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: identity-port
          env:
            - name: ASPNETCORE_URLS
              value: "http://+:443;http://+:80"
          resources:
            requests:
              memory: "100Mi"
              cpu: "0.1"
            limits:
              memory: "200Mi"
              cpu: "0.3"
---
# apiVersion: v1
# kind: Service
# metadata:
#   name: identity-grpc-service
#   labels:
#     app: identity-grpc-service
# spec:
#   selector:
#     app: identity-grpc
#   ports:
#     - protocol: TCP
#       port: 5002
#       targetPort: 80
#   type: LoadBalancer

apiVersion: v1
kind: Service
metadata:
  name: identity-grpc-service
  namespace: ingress-nginx
  labels:
    app: identity-grpc
spec:
  type: ClusterIP
  selector:
    app: identity-grpc
  ports:
    - protocol: TCP
      port: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: identity-service-ingress
  namespace: ingress-nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: letsencrypt
    # nginx.ingress.kubernetes.io/rewrite-target: /identity/$2
spec:
  tls:
    - hosts:
        - aks.20.44.235.37.nip.io # update IP address here
      secretName: app-web-cert
  rules:
    - host: aks.20.44.235.37.nip.io
      http:
        paths:
          - path: /(.*)
            pathType: Prefix
            backend:
              service:
                name: identity-grpc-service
                port:
                  number: 80
