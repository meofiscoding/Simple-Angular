apiVersion: apps/v1
kind: Deployment
metadata:
  name: apigw-deployment
  labels:
    app: apigw
spec:
  replicas: 2
  selector:
    matchLabels:
      app: apigw
  template:
    metadata:
      labels:
        app: apigw
    spec:
      containers:
        - name: apigw
          image: 281901/ocelotapigw:dev
          volumeMounts:
            - name: ocelot-config-volume
              mountPath: /app/publish
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env:
            - name: IdentityUrl
              value: http://identity-api-service
            - name: ASPNETCORE_ENVIRONMENT
              value: Production
            - name: OCELOT_CONFIG_PATH
              value: /app/publish/ocelot.Production.json
      volumes:
        - name: ocelot-config-volume
          configMap:
            name: ocelot-config
---
apiVersion: v1
kind: Service
metadata:
  name: apigw-service
spec:
  selector:
    app: apigw
  ports:
    - protocol: TCP
      port: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: movie-service-ingress
  namespace: ingress-nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  rules:
    - http:
        paths:
          - path: /movies(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: apigw-service
                port:
                  number: 80
